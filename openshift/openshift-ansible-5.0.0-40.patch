diff -ru --no-dereference openshift-ansible.orig/inventory/byo/ose-prerequisites.yml openshift-ansible/inventory/byo/ose-prerequisites.yml
--- openshift-ansible.orig/inventory/byo/ose-prerequisites.yml	2018-04-25 18:04:07.000000000 -0400
+++ openshift-ansible/inventory/byo/ose-prerequisites.yml	2018-06-03 21:50:50.782000000 -0400
@@ -10,12 +10,22 @@
     - iptables-services
     - bridge-utils
     - bash-completion
-    - git
-    - python-pip
     - kexec-tools
     - sos
     - psacct
     - ntp
+    - NetworkManager
+
+  - name: Install python-pip
+    yum: name=python-pip state=present
+    when:
+    - deployment_type == "origin"
+
+  - name: Enble and start network-manager service
+    service:
+      name: NetworkManager
+      state: started
+      enabled: yes
 
   - name: Install Openshift Enterprise package
     yum: name="{{ item }}" state=present
@@ -24,16 +34,20 @@
     when:
     - deployment_type == "openshift-enterprise"
     
-  - name: Install docker-py
-    command: pip install docker-py
+  - name: Install python-docker
+    yum: name=python-docker state=present
     when:
     - deployment_type == "openshift-enterprise"
 
   - name: Install Docker
-    yum: name=docker-1.12.6 state=present
+    yum: name=docker state=present
 
   - name: Enable Docker Service
     service: name=docker enabled=yes
 
   - name: Start Docker Service
     service: name=docker state=started
+
+  - name: Set core pattern
+    shell: echo "/var/crashes/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern
+
diff -ru --no-dereference openshift-ansible.orig/roles/contrail_master/templates/contrail-installer-5.j2 openshift-ansible/roles/contrail_master/templates/contrail-installer-5.j2
--- openshift-ansible.orig/roles/contrail_master/templates/contrail-installer-5.j2	2018-04-25 18:04:07.000000000 -0400
+++ openshift-ansible/roles/contrail_master/templates/contrail-installer-5.j2	2018-06-03 15:04:48.886000000 -0400
@@ -1,8 +1,3 @@
-# Configs section
-# Note: using ".." for ports, because in v1 there is a bug
-# which leads to an error
-# "..error unmarshaling JSON: json: cannot unmarshal number into Go value of type string.."
-# (https://github.com/kubernetes/kubernetes/issues/2763)
 ---
 apiVersion: v1
 kind: ConfigMap
@@ -10,25 +5,28 @@
   name: env
   namespace: kube-system
 data:
-  AAA_MODE: {{ aaa_mode }}
-  ANALYTICS_NODES: {{ groups.masters | ipaddr | join(',') }}
-  ANALYTICSDB_NODES: {{ groups.masters | ipaddr | join(',') }}
-  AUTH_MODE: {{ auth_mode }}
-  CLOUD_ORCHESTRATOR: {{ cloud_orchestrator }}
-  CONFIG_NODES: {{ groups.masters | ipaddr | join(',') }}
-  CONFIGDB_NODES: {{ groups.masters | ipaddr | join(',') }}
-  CONTROL_NODES: {{ groups.masters | ipaddr | join(',') }}
-  CONTROLLER_NODES: {{ groups.masters | ipaddr | join(',') }}
-  KAFKA_NODES: {{ groups.masters | ipaddr | join(',') }}
-  LOG_LEVEL: {{ log_level }}
-  METADATA_PROXY_SECRET: {{ metadata_proxy_secret }}
-  PHYSICAL_INTERFACE: {{ vrouter_physical_interface }}
-  RABBITMQ_NODES: {{ groups.masters | ipaddr | join(',') }}
+  AAA_MODE: "{{ aaa_mode }}"
+  ANALYTICS_API_VIP: "{{ groups.masters | ipaddr | join(',') }}"
+  ANALYTICS_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  ANALYTICSDB_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  AUTH_MODE: "{{ auth_mode }}"
+  CLOUD_ORCHESTRATOR: "{{ cloud_orchestrator }}"
+  CONFIG_API_VIP: "{{ groups.masters | ipaddr | join(',') }}"
+  CONFIG_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  CONFIGDB_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  CONTROL_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  CONTROLLER_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  KAFKA_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  LOG_LEVEL: "{{ log_level }}"
+  METADATA_PROXY_SECRET: "{{ metadata_proxy_secret }}"
+  PHYSICAL_INTERFACE: "{{ vrouter_physical_interface }}"
+  RABBITMQ_NODES: "{{ groups.masters | ipaddr | join(',') }}"
   RABBITMQ_NODE_PORT: "{{ rabbitmq_node_port }}"
-  REDIS_NODES: {{ groups.masters | ipaddr | join(',') }}
-  VROUTER_GATEWAY: {{ vrouter_gateway }}
-  WEBUI_NODES: {{ groups.masters | ipaddr | join(',') }}
-  ZOOKEEPER_NODES: {{ groups.masters | ipaddr | join(',') }}
+  REDIS_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  VROUTER_GATEWAY: "{{ vrouter_gateway }}"
+  WEBUI_NODES: "{{ groups.masters | ipaddr | join(',') }}"
+  WEBUI_VIP: "{{ groups.masters | ipaddr | join(',') }}"
+  ZOOKEEPER_NODES: "{{ groups.masters | ipaddr | join(',') }}"
 ---
 apiVersion: v1
 kind: ConfigMap
@@ -44,7 +42,7 @@
   name: contrail-analyticsdb-config
   namespace: kube-system
 data:
-  CASSANDRA_SEEDS: {{ groups.masters | ipaddr | join(',') }}
+  CASSANDRA_SEEDS: "{{ groups.masters | ipaddr | join(',') }}"
   CASSANDRA_CLUSTER_NAME: Contrail
   CASSANDRA_START_RPC: "true"
   CASSANDRA_LISTEN_ADDRESS: auto
@@ -60,7 +58,7 @@
   name: contrail-configdb-config
   namespace: kube-system
 data:
-  CASSANDRA_SEEDS: {{ groups.masters | ipaddr | join(',') }}
+  CASSANDRA_SEEDS: "{{ groups.masters | ipaddr | join(',') }}"
   CASSANDRA_CLUSTER_NAME: ContrailConfigDB
   CASSANDRA_START_RPC: "true"
   CASSANDRA_LISTEN_ADDRESS: auto
@@ -76,7 +74,7 @@
   name: rabbitmq-config
   namespace: kube-system
 data:
-  RABBITMQ_NODES: {{ groups.masters | ipaddr | join(',') }}
+  RABBITMQ_NODES: "{{ groups.masters | ipaddr | join(',') }}"
   RABBITMQ_NODE_PORT: "{{ rabbitmq_node_port }}"
   RABBITMQ_ERLANG_COOKIE: "47EFF3BB-4786-46E0-A5BB-58455B3C2CB4"
 ---
@@ -88,7 +86,7 @@
 data:
   ZOOKEEPER_PORT: "{{ zookeeper_port }}"
   ZOOKEEPER_PORTS: "{{ zookeeper_ports }}"
-  ZOOKEEPER_NODES: {{ groups.masters | ipaddr | join(',') }}
+  ZOOKEEPER_NODES: "{{ groups.masters | ipaddr | join(',') }}"
 ---
 apiVersion: v1
 kind: ConfigMap
@@ -98,9 +96,7 @@
 data:
   ZOOKEEPER_PORT: "{{ zookeeper_analytics_port }}"
   ZOOKEEPER_PORTS: "{{ zookeeper_analytics_ports }}"
-  ZOOKEEPER_NODES: {{ groups.masters | ipaddr | join(',') }}
-# Containers section
-
+  ZOOKEEPER_NODES: "{{ groups.masters | ipaddr | join(',') }}"
 ---
 apiVersion: v1
 kind: ConfigMap
@@ -108,7 +104,7 @@
   name: kube-manager-config
   namespace: kube-system
 data:
-  KUBERNETES_API_SERVER: {{ api_vip | ipaddr }}
+  KUBERNETES_API_SERVER: "{{ api_vip | ipaddr }}"
   KUBERNETES_API_SECURE_PORT: "{{ kubernetes_api_secure_port }}"
   K8S_TOKEN_FILE: "/tmp/serviceaccount/token"
 # Containers section
@@ -200,6 +196,8 @@
       - name: zookeeper-logs
         hostPath:
           path: /var/log/contrail/zookeeper
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -237,6 +235,8 @@
             name: env
         - configMapRef:
             name: contrail-analytics-zookeeper
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -264,6 +264,30 @@
         effect: NoSchedule
       hostNetwork: true
       containers:
+      - name: contrail-analyticsdb-nodemgr
+        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
+        imagePullPolicy: ""
+        securityContext:
+          privileged: true
+        envFrom:
+        - configMapRef:
+            name: env
+        - configMapRef:
+            name: contrail-analyticsdb-config
+        env:
+        - name: NODE_TYPE
+          value: "database"
+        - name: CASSANDRA_CQL_PORT
+          value: "9042"
+        - name: CASSANDRA_JMX_LOCAL_PORT
+          value: "7200"
+        volumeMounts:
+        - mountPath: /etc/hosts
+          name: hosts
+        - mountPath: /var/log/contrail
+          name: logs
+        - mountPath: /var/run/docker.sock
+          name: docker
       - name: contrail-analyticsdb
         image: "{{ contrail_registry }}/contrail-external-cassandra:{{ contrail_container_tag }}"
         imagePullPolicy: ""
@@ -284,6 +308,18 @@
       - name: analyticsdb-log
         hostPath:
           path: /var/log/contrail/analyticsdb
+      - name: hosts
+        hostPath:
+          path: /etc/hosts
+      - name: logs
+        hostPath:
+          path: /var/log/contrail/analytics_database
+          type: DirectoryOrCreate
+      - name: docker
+        hostPath:
+          path: /var/run/docker.sock
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -331,6 +367,8 @@
       - name: configdb-log
         hostPath:
           path: /var/log/contrail/configdb
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -383,6 +421,8 @@
       - name: analytics-zookeeper-datalog
         hostPath:
           path: /var/lib/analytics_zookeeper_datalog
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -503,11 +543,6 @@
         env:
         - name: NODE_TYPE
           value: analytics
-# todo: there is type Socket in new kubernetes, it is possible to use full
-# path:
-# hostPath:
-#   path: /var/run/docker.sock and
-#   type: Socket
         volumeMounts:
         - mountPath: /var/log/contrail
           name: analytics-logs
@@ -520,6 +555,8 @@
       - name: docker-unix-socket
         hostPath:
           path: /var/run
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -605,11 +642,6 @@
         env:
         - name: NODE_TYPE
           value: control
-# todo: there is type Socket in new kubernetes, it is possible to use full
-# path:
-# hostPath:
-#   path: /var/run/docker.sock and
-#   type: Socket
         volumeMounts:
         - mountPath: /var/log/contrail
           name: control-logs
@@ -624,6 +656,8 @@
           path: /var/run
       - name: dns-config
         emptyDir: {}
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -718,11 +752,6 @@
         env:
         - name: NODE_TYPE
           value: config
-# todo: there is type Socket in new kubernetes, it is possible to use full
-# path:
-# hostPath:
-#   path: /var/run/docker.sock and
-#   type: Socket
         volumeMounts:
         - mountPath: /var/log/contrail
           name: config-logs
@@ -735,6 +764,8 @@
       - name: docker-unix-socket
         hostPath:
           path: /var/run
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -792,6 +823,8 @@
       - name: webui-logs
         hostPath:
           path: /var/log/contrail/webui
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -842,6 +875,8 @@
       - name: redis-logs
         hostPath:
           path: /var/log/contrail/redis
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -893,6 +928,8 @@
       - name: rabbitmq-logs
         hostPath:
           path: /var/log/contrail/rabbitmq
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -945,6 +982,8 @@
       - name: pod-secret
         secret:
           secretName: contrail-kube-manager-token
+      imagePullSecrets:
+      - name: contrail-registry-secret
 ---
 apiVersion: extensions/v1beta1
 kind: DaemonSet
@@ -959,7 +998,6 @@
       labels:
         app: contrail-agent
     spec:
-      #Disable affinity for single node setup
       affinity:
         nodeAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
@@ -967,11 +1005,6 @@
             - matchExpressions:
               - key: "opencontrail.org/controller"
                 operator: DoesNotExist
-      #Enable tolerations for single node setup
-     # tolerations:
-     # - key: node-role.kubernetes.io/master
-     #   operator: Exists
-     #   effect: NoSchedule
       automountServiceAccountToken: false
       hostNetwork: true
       initContainers:
@@ -1011,10 +1044,6 @@
       - name: contrail-vrouter-agent
         image: "{{ contrail_registry }}/contrail-vrouter-agent:{{ contrail_container_tag }}"
         imagePullPolicy: ""
-        # TODO: Priveleged mode is requied because w/o it the device /dev/net/tun
-        # is not present in the container. The mounting it into container
-        # doesnt help because of permissions are not enough syscalls,
-        # e.g. https://github.com/Juniper/contrail-controller/blob/master/src/vnsw/agent/contrail/linux/pkt0_interface.cc: 48.
         securityContext:
           privileged: true
         envFrom:
@@ -1046,11 +1075,6 @@
         env:
         - name: NODE_TYPE
           value: vrouter
-# todo: there is type Socket in new kubernetes, it is possible to use full
-# path:
-# hostPath:
-#   path: /var/run/docker.sock and
-#   type: Socket
         volumeMounts:
         - mountPath: /var/log/contrail
           name: agent-logs
@@ -1087,4 +1111,5 @@
       - name: agent-logs
         hostPath:
           path: /var/log/contrail/agent
-
+      imagePullSecrets:
+      - name: contrail-registry-secret
